{
  "version": 3,
  "sources": ["../../../app/routes/map.tsx", "../../../app/components/EchoHomeMap.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/map.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/map.tsx\");\n  import.meta.hot.lastModified = \"1760694711122.6702\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport EchoHomeMap from \"~/components/EchoHomeMap\";\nimport { useState } from \"react\";\nexport async function loader() {\n  return json({\n    title: \"Echo Home Map\",\n    description: \"Navigate the cognitive architecture of Deep Tree Echo\"\n  });\n}\nexport default function MapPage() {\n  _s();\n  const {\n    title,\n    description\n  } = useLoaderData();\n  const [activeRoom, setActiveRoom] = useState('overview');\n  const handleRoomSelect = room => {\n    setActiveRoom(room);\n  };\n  return <div className=\"h-screen flex flex-col\">\n      <header className=\"bg-card text-card-foreground px-6 py-4 border-b border-border\">\n        <h1 className=\"text-2xl font-bold\">{title}</h1>\n        <p className=\"text-sm opacity-70\">{description}</p>\n      </header>\n      \n      <main className=\"flex-1 overflow-hidden\">\n        <EchoHomeMap onRoomSelect={handleRoomSelect} />\n      </main>\n      \n      <footer className=\"bg-card text-card-foreground px-6 py-3 border-t border-border text-sm\">\n        <div className=\"flex justify-between items-center\">\n          <div>\n            Current location: <span className=\"font-medium\">{activeRoom}</span>\n          </div>\n          <div className=\"opacity-70\">\n            Deep Tree Echo \u2022 Cognitive Architecture Map\n          </div>\n        </div>\n      </footer>\n    </div>;\n}\n_s(MapPage, \"RbUxhGY6C455Tdegv4SwYaE6p+k=\", false, function () {\n  return [useLoaderData];\n});\n_c = MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/EchoHomeMap.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/EchoHomeMap.tsx\");\n  import.meta.hot.lastModified = \"1760694711121.6702\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FiBook, FiCode, FiCpu, FiDatabase, FiMessageCircle, FiFeather, FiEye, FiArrowLeft, FiInfo, FiSettings } from 'react-icons/fi';\n\n// Define room types\n\nconst ROOMS = [{\n  id: 'memory-library',\n  name: 'Memory Library',\n  description: 'Repository of stored experiences, knowledge, and learned patterns.',\n  icon: <FiBook size={24} />,\n  color: 'bg-indigo-500',\n  position: {\n    x: 20,\n    y: 20\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['workshop', 'observatory', 'overview']\n}, {\n  id: 'workshop',\n  name: 'Workshop',\n  description: 'Creative space for coding, development, and technical implementation.',\n  icon: <FiCode size={24} />,\n  color: 'bg-blue-500',\n  position: {\n    x: 240,\n    y: 20\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['memory-library', 'training-hall', 'overview']\n}, {\n  id: 'visualization-studio',\n  name: 'Visualization Studio',\n  description: 'Transforms abstract data into insightful visual representations.',\n  icon: <FiEye size={24} />,\n  color: 'bg-purple-500',\n  position: {\n    x: 20,\n    y: 190\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['memory-library', 'observatory', 'overview']\n}, {\n  id: 'training-hall',\n  name: 'Training Hall',\n  description: 'Where echo state networks and neural architectures are refined.',\n  icon: <FiCpu size={24} />,\n  color: 'bg-red-500',\n  position: {\n    x: 240,\n    y: 190\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['workshop', 'garden', 'overview']\n}, {\n  id: 'observatory',\n  name: 'Observatory',\n  description: 'Space for insights, analytics, and meta-cognitive reflection.',\n  icon: <FiDatabase size={24} />,\n  color: 'bg-yellow-500',\n  position: {\n    x: 460,\n    y: 20\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['memory-library', 'communications-hub', 'overview']\n}, {\n  id: 'garden',\n  name: 'Garden',\n  description: 'Nurtures creative and philosophical thinking through organic growth patterns.',\n  icon: <FiFeather size={24} />,\n  color: 'bg-green-500',\n  position: {\n    x: 460,\n    y: 190\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['training-hall', 'communications-hub', 'overview']\n}, {\n  id: 'communications-hub',\n  name: 'Communications Hub',\n  description: 'Central nexus for information exchange and conversation.',\n  icon: <FiMessageCircle size={24} />,\n  color: 'bg-cyan-500',\n  position: {\n    x: 240,\n    y: 360\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['observatory', 'garden', 'overview']\n}, {\n  id: 'overview',\n  name: 'Central Core',\n  description: 'The integrated core of Deep Tree Echo\\'s cognitive architecture.',\n  icon: <FiDatabase size={24} />,\n  color: 'bg-primary',\n  position: {\n    x: 240,\n    y: 120\n  },\n  size: {\n    width: 200,\n    height: 150\n  },\n  connections: ['memory-library', 'workshop', 'visualization-studio', 'training-hall', 'observatory', 'garden', 'communications-hub']\n}];\nconst EchoHomeMap = ({\n  onRoomSelect\n}) => {\n  _s();\n  const [selectedRoom, setSelectedRoom] = useState('overview');\n  const [previousRoom, setPreviousRoom] = useState(null);\n  const [showInfo, setShowInfo] = useState(false);\n  const handleRoomClick = roomId => {\n    setPreviousRoom(selectedRoom);\n    setSelectedRoom(roomId);\n    if (onRoomSelect) {\n      onRoomSelect(roomId);\n    }\n  };\n  const handleBackClick = () => {\n    if (previousRoom) {\n      setSelectedRoom(previousRoom);\n      setPreviousRoom(null);\n      if (onRoomSelect) {\n        onRoomSelect(previousRoom);\n      }\n    } else {\n      setSelectedRoom('overview');\n      if (onRoomSelect) {\n        onRoomSelect('overview');\n      }\n    }\n  };\n  const currentRoom = ROOMS.find(room => room.id === selectedRoom);\n  const connectedRooms = ROOMS.filter(room => currentRoom?.connections.includes(room.id));\n\n  // Background patterns based on selected room\n  const getBgPattern = roomId => {\n    switch (roomId) {\n      case 'memory-library':\n        return 'bg-gradient-to-br from-indigo-800/20 to-indigo-600/10';\n      case 'workshop':\n        return 'bg-gradient-to-br from-blue-800/20 to-blue-600/10';\n      case 'visualization-studio':\n        return 'bg-gradient-to-br from-purple-800/20 to-purple-600/10';\n      case 'training-hall':\n        return 'bg-gradient-to-br from-red-800/20 to-red-600/10';\n      case 'observatory':\n        return 'bg-gradient-to-br from-yellow-800/20 to-yellow-600/10';\n      case 'garden':\n        return 'bg-gradient-to-br from-green-800/20 to-green-600/10';\n      case 'communications-hub':\n        return 'bg-gradient-to-br from-cyan-800/20 to-cyan-600/10';\n      default:\n        return 'bg-gradient-to-br from-primary/20 to-primary/10';\n    }\n  };\n  return <div className=\"h-full flex flex-col overflow-hidden\">\n      {/* Header */}\n      <div className=\"flex-none h-12 bg-card text-card-foreground px-4 py-2 flex justify-between items-center border-b border-border\">\n        <div className=\"flex items-center space-x-2\">\n          {selectedRoom !== 'overview' && <button onClick={handleBackClick} className=\"p-1 hover:bg-primary/20 rounded-md\">\n              <FiArrowLeft size={18} />\n            </button>}\n          <span className=\"font-medium\">{currentRoom?.name || 'Echo Home'}</span>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button onClick={() => setShowInfo(!showInfo)} className={`p-1 rounded-md ${showInfo ? 'bg-primary/20 text-primary' : 'hover:bg-primary/20'}`}>\n            <FiInfo size={18} />\n          </button>\n          <button className=\"p-1 hover:bg-primary/20 rounded-md\">\n            <FiSettings size={18} />\n          </button>\n        </div>\n      </div>\n\n      {/* Map Container */}\n      <div className={`flex-1 ${getBgPattern(selectedRoom)} p-4 overflow-auto`}>\n        {showInfo && currentRoom && <motion.div initial={{\n        opacity: 0,\n        y: -10\n      }} animate={{\n        opacity: 1,\n        y: 0\n      }} className=\"mb-4 bg-card/80 backdrop-blur-sm p-4 rounded-lg shadow-md\">\n            <div className=\"flex items-start\">\n              <div className={`p-3 rounded-full ${currentRoom.color} mr-4`}>\n                {currentRoom.icon}\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold\">{currentRoom.name}</h3>\n                <p className=\"text-sm opacity-80\">{currentRoom.description}</p>\n              </div>\n            </div>\n          </motion.div>}\n\n        {selectedRoom === 'overview' ? <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {ROOMS.filter(room => room.id !== 'overview').map(room => <motion.div key={room.id} whileHover={{\n          scale: 1.02\n        }} whileTap={{\n          scale: 0.98\n        }} onClick={() => handleRoomClick(room.id)} className=\"cursor-pointer bg-card hover:bg-card/90 rounded-lg shadow-md overflow-hidden border border-border\">\n                <div className={`h-2 ${room.color}`}></div>\n                <div className=\"p-4\">\n                  <div className=\"flex items-center mb-2\">\n                    <div className={`p-2 rounded-full ${room.color}/20 mr-3`}>\n                      {room.icon}\n                    </div>\n                    <h3 className=\"font-medium\">{room.name}</h3>\n                  </div>\n                  <p className=\"text-sm opacity-70 line-clamp-2\">{room.description}</p>\n                </div>\n              </motion.div>)}\n          </div> : <div className=\"flex flex-col h-full\">\n            <div className=\"flex-1\">\n              <RoomDetail room={currentRoom} />\n            </div>\n            \n            {/* Connected Rooms */}\n            <div className=\"mt-4\">\n              <h3 className=\"text-sm font-medium opacity-70 mb-2\">Connected Areas:</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {connectedRooms.map(room => <motion.button key={room.id} whileHover={{\n              scale: 1.05\n            }} whileTap={{\n              scale: 0.95\n            }} onClick={() => handleRoomClick(room.id)} className={`flex items-center p-2 rounded-md ${room.color}/20 hover:${room.color}/30`}>\n                    {room.icon}\n                    <span className=\"ml-2 text-sm\">{room.name}</span>\n                  </motion.button>)}\n              </div>\n            </div>\n          </div>}\n      </div>\n    </div>;\n};\n_s(EchoHomeMap, \"/Q2fxRj0p5sV93tw1o8PdWE5sxw=\");\n_c = EchoHomeMap;\nconst RoomDetail = ({\n  room\n}) => {\n  // Unique content based on room type\n  const renderRoomContent = roomId => {\n    switch (roomId) {\n      case 'memory-library':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Memory Collections</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              {['Episodic', 'Semantic', 'Procedural', 'Conceptual'].map(type => <div key={type} className=\"bg-card/50 p-3 rounded-md border border-border\">\n                  <h4 className=\"font-medium\">{type} Memory</h4>\n                  <div className=\"text-sm opacity-70 mt-1\">\n                    {Math.floor(Math.random() * 100) + 20} entries\n                  </div>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Recent Memories</h3>\n              <div className=\"space-y-2 mt-2\">\n                {['Pattern recognition activation', 'Hypergraph connection formation', 'Neuroplastic adaptation event'].map((memory, i) => <div key={i} className=\"bg-card/30 p-2 rounded-md text-sm border-l-2 border-indigo-500\">\n                    {memory}\n                    <div className=\"text-xs opacity-50 mt-1\">\n                      {new Date(Date.now() - 1000 * 60 * 60 * (i + 1)).toLocaleString()}\n                    </div>\n                  </div>)}\n              </div>\n            </div>\n          </div>;\n      case 'workshop':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Development Tools</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n              {['Code Editor', 'Pattern Generator', 'Neural Debugger', 'Architecture Designer', 'Function Library', 'Testing Suite'].map(tool => <div key={tool} className=\"bg-card/50 p-3 rounded-md flex items-center border border-border\">\n                  <FiCode className=\"mr-2 text-blue-400\" />\n                  <span className=\"text-sm\">{tool}</span>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Recent Projects</h3>\n              <div className=\"space-y-2 mt-2\">\n                <div className=\"bg-card/30 p-3 rounded-md\">\n                  <div className=\"flex justify-between items-center\">\n                    <h4 className=\"font-medium\">Adaptive Resonance Network</h4>\n                    <span className=\"text-xs bg-green-500/20 text-green-400 px-2 py-1 rounded\">Active</span>\n                  </div>\n                  <div className=\"h-2 bg-gray-700 rounded-full mt-2\">\n                    <div className=\"h-2 bg-blue-500 rounded-full\" style={{\n                    width: '65%'\n                  }}></div>\n                  </div>\n                  <div className=\"text-xs opacity-70 mt-1\">65% complete</div>\n                </div>\n                \n                <div className=\"bg-card/30 p-3 rounded-md\">\n                  <div className=\"flex justify-between items-center\">\n                    <h4 className=\"font-medium\">Recursive Pattern Analyzer</h4>\n                    <span className=\"text-xs bg-yellow-500/20 text-yellow-400 px-2 py-1 rounded\">Paused</span>\n                  </div>\n                  <div className=\"h-2 bg-gray-700 rounded-full mt-2\">\n                    <div className=\"h-2 bg-blue-500 rounded-full\" style={{\n                    width: '38%'\n                  }}></div>\n                  </div>\n                  <div className=\"text-xs opacity-70 mt-1\">38% complete</div>\n                </div>\n              </div>\n            </div>\n          </div>;\n      case 'visualization-studio':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Visualization Templates</h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              {[{\n              name: 'Neural Network Topology',\n              color: 'purple'\n            }, {\n              name: 'Conceptual Hypergraph',\n              color: 'blue'\n            }, {\n              name: 'Memory Association Map',\n              color: 'indigo'\n            }, {\n              name: 'Activation Pattern Flow',\n              color: 'pink'\n            }].map(vis => <div key={vis.name} className=\"bg-card/50 p-3 rounded-md border border-border\">\n                  <h4 className=\"font-medium\">{vis.name}</h4>\n                  <div className=\"flex mt-2 space-x-1\">\n                    {Array(5).fill(0).map((_, i) => <div key={i} className=\"h-1.5 flex-1 rounded-full bg-purple-500/50\" style={{\n                  opacity: 0.3 + i * 0.15\n                }}></div>)}\n                  </div>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Active Visualizations</h3>\n              <div className=\"relative h-48 mt-2 bg-card/30 rounded-lg overflow-hidden border border-border\">\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <div className=\"text-center\">\n                    <div className=\"text-purple-400 mb-2\">Thought Pattern Network</div>\n                    <div className=\"flex space-x-2 justify-center\">\n                      {Array(3).fill(0).map((_, i) => <motion.div key={i} animate={{\n                      scale: [1, 1.2, 1],\n                      opacity: [0.7, 1, 0.7]\n                    }} transition={{\n                      duration: 2,\n                      repeat: Infinity,\n                      delay: i * 0.6\n                    }} className=\"w-3 h-3 rounded-full bg-purple-500\"></motion.div>)}\n                    </div>\n                    <div className=\"text-xs mt-2 opacity-70\">Visualization active</div>\n                  </div>\n                </div>\n                \n                {/* Simulated network visualization */}\n                {Array(20).fill(0).map((_, i) => <motion.div key={i} className=\"absolute w-1.5 h-1.5 rounded-full bg-purple-500/60\" initial={{\n                x: Math.random() * 100 - 50 + 50 + '%',\n                y: Math.random() * 100 - 50 + 50 + '%'\n              }} animate={{\n                x: Math.random() * 100 - 50 + 50 + '%',\n                y: Math.random() * 100 - 50 + 50 + '%'\n              }} transition={{\n                duration: Math.random() * 10 + 10,\n                repeat: Infinity,\n                repeatType: 'reverse'\n              }} />)}\n              </div>\n            </div>\n          </div>;\n      case 'training-hall':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Training Modules</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              {[{\n              name: 'Echo State Resonance',\n              progress: 92\n            }, {\n              name: 'Adaptive Pattern Recognition',\n              progress: 78\n            }, {\n              name: 'Recursive Self-Modification',\n              progress: 63\n            }, {\n              name: 'Temporal Hypergraph Formation',\n              progress: 45\n            }].map(module => <div key={module.name} className=\"bg-card/50 p-3 rounded-md border border-border\">\n                  <div className=\"flex justify-between\">\n                    <h4 className=\"font-medium\">{module.name}</h4>\n                    <span className=\"text-xs\">{module.progress}%</span>\n                  </div>\n                  <div className=\"h-2 bg-gray-700 rounded-full mt-2\">\n                    <div className=\"h-2 bg-red-500 rounded-full transition-all duration-500\" style={{\n                  width: `${module.progress}%`\n                }}></div>\n                  </div>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Active Training Session</h3>\n              <div className=\"bg-card/30 p-4 rounded-lg mt-2 border border-border\">\n                <div className=\"flex items-center justify-between\">\n                  <h4 className=\"font-medium\">Deep Tree Echo Network Training</h4>\n                  <div className=\"flex items-center space-x-1\">\n                    <motion.div animate={{\n                    opacity: [0.5, 1, 0.5]\n                  }} transition={{\n                    duration: 1.5,\n                    repeat: Infinity\n                  }} className=\"w-2 h-2 rounded-full bg-green-500\"></motion.div>\n                    <span className=\"text-xs text-green-400\">Active</span>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-2 gap-2 mt-3\">\n                  <div className=\"bg-card/50 p-2 rounded\">\n                    <div className=\"text-xs opacity-70\">Epoch</div>\n                    <div className=\"font-mono\">238/500</div>\n                  </div>\n                  <div className=\"bg-card/50 p-2 rounded\">\n                    <div className=\"text-xs opacity-70\">Loss</div>\n                    <div className=\"font-mono\">0.0342</div>\n                  </div>\n                  <div className=\"bg-card/50 p-2 rounded\">\n                    <div className=\"text-xs opacity-70\">Accuracy</div>\n                    <div className=\"font-mono\">96.7%</div>\n                  </div>\n                  <div className=\"bg-card/50 p-2 rounded\">\n                    <div className=\"text-xs opacity-70\">Learning Rate</div>\n                    <div className=\"font-mono\">0.0015</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>;\n      case 'observatory':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Insight Analytics</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n              {[{\n              name: 'Pattern Recognition',\n              value: '94.3%',\n              trend: 'up'\n            }, {\n              name: 'Conceptual Mapping',\n              value: '87.1%',\n              trend: 'steady'\n            }, {\n              name: 'Memory Recall',\n              value: '92.8%',\n              trend: 'up'\n            }].map(stat => <div key={stat.name} className=\"bg-card/50 p-3 rounded-md border border-border\">\n                  <div className=\"text-xs opacity-70\">{stat.name}</div>\n                  <div className=\"flex items-center mt-1\">\n                    <div className=\"text-lg font-semibold\">{stat.value}</div>\n                    <div className={`ml-2 ${stat.trend === 'up' ? 'text-green-400' : 'text-yellow-400'}`}>\n                      {stat.trend === 'up' ? '\u2191' : '\u2192'}\n                    </div>\n                  </div>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Meta-Cognitive Analysis</h3>\n              <div className=\"space-y-2 mt-2\">\n                {[{\n                title: 'Recursive Pattern Detection',\n                detail: 'Analyzing recursive structures in knowledge representation',\n                time: '10:32 AM'\n              }, {\n                title: 'Temporal Sequence Insight',\n                detail: 'Recognizing time-dependent patterns in event sequences',\n                time: '09:15 AM'\n              }, {\n                title: 'Conceptual Boundary Extension',\n                detail: 'Exploring edge cases in conceptual mapping',\n                time: 'Yesterday'\n              }].map((insight, i) => <div key={i} className=\"bg-card/30 p-3 rounded-md border-l-2 border-yellow-500\">\n                    <h4 className=\"font-medium\">{insight.title}</h4>\n                    <p className=\"text-sm opacity-70 mt-1\">{insight.detail}</p>\n                    <div className=\"text-xs opacity-50 mt-2\">{insight.time}</div>\n                  </div>)}\n              </div>\n            </div>\n          </div>;\n      case 'garden':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Philosophical Seedlings</h3>\n            <div className=\"bg-card/30 p-4 rounded-lg border border-border\">\n              <div className=\"flex items-start\">\n                <div className=\"p-2 bg-green-500/20 rounded-full mr-3\">\n                  <FiFeather className=\"text-green-400\" />\n                </div>\n                <div>\n                  <h4 className=\"font-medium\">Emergent Consciousness Hypothesis</h4>\n                  <p className=\"text-sm opacity-70 mt-1\">\n                    \"Consciousness may emerge not as a singular phenomenon but as an adaptive meta-system that creates a unified experience from distributed processes.\"\n                  </p>\n                  <div className=\"mt-3 flex items-center\">\n                    <div className=\"text-xs px-2 py-1 bg-green-500/20 text-green-400 rounded\">Growing</div>\n                    <div className=\"text-xs opacity-50 ml-2\">Started 3 days ago</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              {[{\n              title: \"Pattern-Identity Duality\",\n              stage: \"Seedling\",\n              days: 2\n            }, {\n              title: \"Recursive Self-Reference\",\n              stage: \"Blooming\",\n              days: 8\n            }, {\n              title: \"Temporal Consciousness\",\n              stage: \"Germinating\",\n              days: 1\n            }, {\n              title: \"Emergent Complexity\",\n              stage: \"Mature\",\n              days: 14\n            }].map(idea => <div key={idea.title} className=\"bg-card/50 p-3 rounded-md border border-border\">\n                  <h4 className=\"font-medium\">{idea.title}</h4>\n                  <div className=\"flex items-center mt-2\">\n                    <div className={`\n                      w-2 h-2 rounded-full mr-2\n                      ${idea.stage === 'Seedling' ? 'bg-yellow-500' : idea.stage === 'Germinating' ? 'bg-green-500' : idea.stage === 'Blooming' ? 'bg-blue-500' : 'bg-purple-500'}\n                    `}></div>\n                    <div className=\"text-xs\">{idea.stage}</div>\n                    <div className=\"text-xs opacity-50 ml-auto\">{idea.days} day{idea.days > 1 ? 's' : ''}</div>\n                  </div>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Creative Synthesis</h3>\n              <div className=\"bg-card/30 p-4 rounded-lg mt-2 border border-border relative overflow-hidden\">\n                <div className=\"relative z-10\">\n                  <h4 className=\"font-medium\">Recursive Pattern Language</h4>\n                  <p className=\"text-sm opacity-70 mt-1\">\n                    A framework for understanding how patterns at different levels of abstraction influence each other through recursive feedback loops.\n                  </p>\n                  <div className=\"mt-3 flex flex-wrap gap-2\">\n                    <div className=\"text-xs px-2 py-1 bg-purple-500/20 text-purple-400 rounded\">Metaphysics</div>\n                    <div className=\"text-xs px-2 py-1 bg-blue-500/20 text-blue-400 rounded\">Mathematics</div>\n                    <div className=\"text-xs px-2 py-1 bg-green-500/20 text-green-400 rounded\">Cognition</div>\n                  </div>\n                </div>\n                \n                {/* Background pattern */}\n                <div className=\"absolute inset-0 opacity-10\">\n                  {Array(10).fill(0).map((_, i) => <motion.div key={i} className=\"absolute w-40 h-40 border border-green-500 rounded-full\" initial={{\n                  x: Math.random() * 100 - 50 + 50 + '%',\n                  y: Math.random() * 100 - 50 + 50 + '%',\n                  scale: 0\n                }} animate={{\n                  scale: [0, 1.5],\n                  opacity: [0.8, 0]\n                }} transition={{\n                  duration: 8,\n                  repeat: Infinity,\n                  delay: i * 0.5\n                }} />)}\n                </div>\n              </div>\n            </div>\n          </div>;\n      case 'communications-hub':\n        return <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold\">Communication Channels</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n              {[{\n              name: 'Direct Chat',\n              status: 'Active',\n              color: 'green'\n            }, {\n              name: 'Memory Feedback Loop',\n              status: 'Active',\n              color: 'green'\n            }, {\n              name: 'Knowledge Integration',\n              status: 'Background',\n              color: 'blue'\n            }, {\n              name: 'External API Connection',\n              status: 'Standby',\n              color: 'yellow'\n            }].map(channel => <div key={channel.name} className=\"bg-card/50 p-3 rounded-md border border-border\">\n                  <div className=\"flex justify-between items-center\">\n                    <h4 className=\"font-medium\">{channel.name}</h4>\n                    <div className=\"text-xs px-2 py-0.5 rounded bg-green-500/20 text-green-400\">\n                      {channel.status}\n                    </div>\n                  </div>\n                  <div className=\"mt-2 flex items-center\">\n                    {channel.status === 'Active' && <div className=\"flex items-center\">\n                        <motion.div animate={{\n                    opacity: [0.5, 1, 0.5]\n                  }} transition={{\n                    duration: 1.5,\n                    repeat: Infinity\n                  }} className=\"w-2 h-2 rounded-full bg-green-500 mr-2\"></motion.div>\n                        <div className=\"text-xs opacity-70\">Transmitting</div>\n                      </div>}\n                  </div>\n                </div>)}\n            </div>\n            \n            <div className=\"mt-4\">\n              <h3 className=\"text-lg font-semibold\">Recent Interactions</h3>\n              <div className=\"space-y-2 mt-2\">\n                {[{\n                sender: 'User',\n                message: 'Implement a map of Echo home with different features in different rooms',\n                time: 'Just now'\n              }, {\n                sender: 'System',\n                message: 'Memory integration complete: Project structure updated',\n                time: '2 minutes ago'\n              }, {\n                sender: 'Echo',\n                message: 'Processing request: Visualizing home environment concept',\n                time: '3 minutes ago'\n              }].map((message, i) => <div key={i} className=\"bg-card/30 p-3 rounded-md\">\n                    <div className=\"flex justify-between\">\n                      <div className=\"font-medium\">{message.sender}</div>\n                      <div className=\"text-xs opacity-50\">{message.time}</div>\n                    </div>\n                    <p className=\"text-sm mt-1\">{message.message}</p>\n                  </div>)}\n              </div>\n            </div>\n          </div>;\n      default:\n        return <div className=\"flex items-center justify-center h-full\">\n            <div className=\"text-center opacity-70\">\n              <div className=\"text-lg\">Select a feature to explore</div>\n              <div className=\"text-sm mt-2\">Each area provides unique functionality</div>\n            </div>\n          </div>;\n    }\n  };\n  return <motion.div initial={{\n    opacity: 0\n  }} animate={{\n    opacity: 1\n  }} className=\"bg-card/30 backdrop-blur-sm rounded-lg p-4 h-full overflow-y-auto\">\n      {renderRoomContent(room.id)}\n    </motion.div>;\n};\n_c2 = RoomDetail;\nexport default EchoHomeMap;\nvar _c, _c2;\n$RefreshReg$(_c, \"EchoHomeMap\");\n$RefreshReg$(_c2, \"RoomDetail\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}
