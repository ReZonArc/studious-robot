{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1760694711122.6702\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport { supabaseClient } from \"~/services/supabase.server\";\nexport async function loader({\n  request\n}) {\n  const {\n    data\n  } = await supabaseClient.auth.getSession();\n\n  // If already logged in, redirect to home\n  if (data.session) {\n    return redirect('/');\n  }\n  return json({\n    ENV: {\n      SUPABASE_URL: process.env.SUPABASE_URL,\n      SUPABASE_ANON_KEY: process.env.SUPABASE_ANON_KEY\n    }\n  });\n}\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const email = formData.get('email');\n  const password = formData.get('password');\n  const action = formData.get('action');\n  if (!email || !password) {\n    return json({\n      error: 'Email and password are required'\n    });\n  }\n  try {\n    if (action === 'signup') {\n      const {\n        error\n      } = await supabaseClient.auth.signUp({\n        email,\n        password\n      });\n      if (error) throw error;\n      return json({\n        success: 'Check your email for the confirmation link'\n      });\n    } else {\n      const {\n        error\n      } = await supabaseClient.auth.signInWithPassword({\n        email,\n        password\n      });\n      if (error) throw error;\n      return redirect('/');\n    }\n  } catch (error) {\n    return json({\n      error: error.message\n    });\n  }\n}\nexport default function Login() {\n  _s();\n  const data = useLoaderData();\n  const actionData = useActionData();\n  const [isSignUp, setIsSignUp] = useState(false);\n\n  // Make ENV available to the client\n  if (typeof window !== \"undefined\") {\n    window.ENV = data.ENV;\n  }\n  return <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900 dark:text-white\">\n            {isSignUp ? 'Create your account' : 'Sign in to your account'}\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600 dark:text-gray-400\">\n            {isSignUp ? 'Already have an account? ' : 'Don\\'t have an account? '}\n            <button className=\"font-medium text-primary hover:text-primary/80\" onClick={() => setIsSignUp(!isSignUp)}>\n              {isSignUp ? 'Sign in' : 'Sign up'}\n            </button>\n          </p>\n        </div>\n        \n        {actionData?.error && <div className=\"rounded-md bg-red-50 dark:bg-red-900/30 p-4\">\n            <div className=\"flex\">\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800 dark:text-red-200\">\n                  Error\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700 dark:text-red-300\">\n                  <p>{actionData.error}</p>\n                </div>\n              </div>\n            </div>\n          </div>}\n        \n        {actionData?.success && <div className=\"rounded-md bg-green-50 dark:bg-green-900/30 p-4\">\n            <div className=\"flex\">\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-green-800 dark:text-green-200\">\n                  Success\n                </h3>\n                <div className=\"mt-2 text-sm text-green-700 dark:text-green-300\">\n                  <p>{actionData.success}</p>\n                </div>\n              </div>\n            </div>\n          </div>}\n        \n        <Form method=\"post\" className=\"mt-8 space-y-6\">\n          <input type=\"hidden\" name=\"action\" value={isSignUp ? 'signup' : 'login'} />\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">\n                Email address\n              </label>\n              <input id=\"email-address\" name=\"email\" type=\"email\" autoComplete=\"email\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white rounded-t-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm dark:bg-gray-800\" placeholder=\"Email address\" />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input id=\"password\" name=\"password\" type=\"password\" autoComplete={isSignUp ? 'new-password' : 'current-password'} required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 dark:border-gray-700 placeholder-gray-500 dark:placeholder-gray-400 text-gray-900 dark:text-white rounded-b-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm dark:bg-gray-800\" placeholder=\"Password\" />\n            </div>\n          </div>\n          \n          <div>\n            <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\">\n              {isSignUp ? 'Sign up' : 'Sign in'}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>;\n}\n_s(Login, \"HnsoGlRLJz5MF6L2KvW+hdRiIwU=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react"]
}
